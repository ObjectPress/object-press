/* General Styles */

amplify-authenticator {
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 1;
  position: absolute;
  left: 50%;
  top: 45%;
  transform: translate(-50%, -50%);
  height: 80vh;
}

:root {
  --amplify-font-family: system-ui, -apple-system, 'Segoe UI', Roboto, Helvetica,
    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji';
  --amplify-text-xxs: 0.75rem;
  --amplify-text-xs: 0.81rem;
  --amplify-text-sm: 0.875rem;
  --amplify-text-md: 1rem;
  --amplify-text-md-sub: 1.15rem;
  --amplify-text-lg: 1.5rem;
  --amplify-text-xl: 2rem;
  --amplify-text-xxl: 2.5rem;
  --amplify-primary-color: rgba(30, 64, 175, 1);
  --amplify-primary-contrast: var(--amplify-white);
  --amplify-primary-tint: rgba(59, 130, 246, 1);
  --amplify-primary-shade: rgba(59, 130, 246, 1);
  --amplify-secondary-color: rgba(39, 39, 42, 1);
  --amplify-secondary-contrast: var(--amplify-white);
  --amplify-secondary-tint: #31465f;
  --amplify-secondary-shade: #1f2a37;
  --amplify-tertiary-color: #5d8aff;
  --amplify-tertiary-contrast: #f7f7f7;
  --amplify-tertiary-tint: #7da1ff;
  --amplify-tertiary-shade: #537be5;
  --amplify-background-color: #f7f7f7;
  --amplify-grey: rgba(39, 39, 42, 1);
  --amplify-light-grey: rgba(39, 39, 42, 1);
  --amplify-white: #ffffff;
  --amplify-smoke-white: #f5f5f5;
  --amplify-red: #dd3f5b;
  --amplify-blue: #099ac8;
}

.page-center {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.header-logo {
  height: 70px;
  width: auto;
}

.header-logo2 {
  max-height: 35px;
  width: auto;
}

.nav-shadow {
  box-shadow: 0.3rem 0.4rem 0.4rem rgba(0, 0, 0, 0.4);
}

/* Loader */

.lds-grid {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}
.lds-grid div {
  position: absolute;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background: #63b3ed;
  animation: lds-grid 1.2s linear infinite;
}
.lds-grid div:nth-child(1) {
  top: 8px;
  left: 8px;
  animation-delay: 0s;
}
.lds-grid div:nth-child(2) {
  top: 8px;
  left: 32px;
  animation-delay: -0.4s;
}
.lds-grid div:nth-child(3) {
  top: 8px;
  left: 56px;
  animation-delay: -0.8s;
}
.lds-grid div:nth-child(4) {
  top: 32px;
  left: 8px;
  animation-delay: -0.4s;
}
.lds-grid div:nth-child(5) {
  top: 32px;
  left: 32px;
  animation-delay: -0.8s;
}
.lds-grid div:nth-child(6) {
  top: 32px;
  left: 56px;
  animation-delay: -1.2s;
}
.lds-grid div:nth-child(7) {
  top: 56px;
  left: 8px;
  animation-delay: -0.8s;
}
.lds-grid div:nth-child(8) {
  top: 56px;
  left: 32px;
  animation-delay: -1.2s;
}
.lds-grid div:nth-child(9) {
  top: 56px;
  left: 56px;
  animation-delay: -1.6s;
}
@keyframes lds-grid {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Auto Complete */

.maintain-width {
  position: absolute;
  width: 100%;
}

.dropdown-position {
  cursor: pointer;
  z-index: 999;
  position: relative;
  bottom: -50%;
}

/* Hamburger Menu */

.hamburger_button {
  width: 30px;
}

.hamburger_white > div > div {
  background-color: #fff !important;
}

/* This is the animation and style CSS */
/* You do not need to touch this */

.hamburger_button > div {
  width: 100%;
  padding-bottom: 100%;
  position: relative;
}

.hamburger_button > div > div {
  background-color: #000; /* You may change the bars' color here */
  position: absolute;
  width: 80%;
  height: 10%;
  border-radius: 1000px;
  left: 10%;
  top: 45%;
  transition: transform 0.1s linear, top 0.25s linear 0.1s, width 0s linear 0.1s;
}

.hamburger_button > div div:nth-child(1) {
  top: 20%;
}

.hamburger_button > div div:nth-child(3) {
  top: 70%;
}

.close div > div {
  transition: transform 0.25s linear 0.1s, top 0.1s linear, width 0s linear 0.1s;
}

.close > div div:nth-child(1) {
  top: 45% !important;
  transform: rotate(45deg);
}
.close > div div:nth-child(2) {
  width: 0;
}
.close > div div:nth-child(3) {
  top: 45% !important;
  transform: rotate(-45deg);
}

/* creative tim */

.thumb-cover img {
  box-shadow: 0.3rem 0.4rem 0.4rem rgba(0, 0, 0, 0.4);
  border-radius: 15px;
  transition: transform 400ms ease-out;
}

.thumb-cover img:hover {
  transform: scale(1.15);
}

/* Gallery Grid */
/*

All grid code is placed in a 'supports' rule (feature query) at the bottom of the CSS (Line 77). 
        
The 'supports' rule will only run if your browser supports CSS grid.

Flexbox is used as a fallback so that browsers which don't support grid will still recieve an identical layout.

*/

.gallery {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.gallery-item {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  /* Margin value should be half of grid-gap value as margins on flex items don't collapse */
  box-shadow: 0.3rem 0.4rem 0.4rem rgba(0, 0, 0, 0.4);
  background-color: #fff;
  height: 30vh;
}

.gallery-image {
  max-height: 20vh;
  overflow: hidden;
  padding: 0.5rem;
  display: flex;
  margin: auto;
  transition: transform 400ms ease-out;
}

.gallery-image:hover {
  transform: scale(1.1);
  cursor: pointer;
}

/*

The following rule will only run if your browser supports CSS grid.

Remove or comment-out the code block below to see how the browser will fall-back to flexbox styling. 

*/

@supports (display: grid) {
  .gallery {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24rem, 1fr));
    grid-gap: 2rem;
  }

  .gallery {
    max-width: 90vw;
  }
}

.select-country::placeholder {
  color: #2d3748;
}

/* Hooks */
.text-field {
  width: 42%;
  padding: 0 0.2rem;
}

.build-button {
  width: 8%;
  display: flex;
  align-items: center;
  padding: 0 0.2rem;
  padding-top: 1.6rem;
}

@media (max-width: 1024px) {
  .text-field,
  .build-button {
    width: 100%;
  }
}
